volumes:
  op_geth_data: {}
  op_node_data: {}
  jwt_shared: {}
services:
  op-init:
    image: alpine:latest
    command:
    - /bin/sh
    - -c
    - |
      set -euo pipefail

      # Create config directory
      mkdir -p /config

      # Generate JWT secret if it doesn't exist
      if [ ! -f '/jwt/jwt' ]; then
        echo 'Generating JWT secret'
        mkdir -p /jwt
        # Generate a 32-byte random hex string for JWT secret
        apk add --no-cache openssl
        openssl rand -hex 32 > /jwt/jwt
        chmod 666 /jwt/jwt
        echo 'JWT secret generated successfully'
      else
        echo 'JWT secret already exists, skipping generation'
      fi
    volumes:
    - op_node_data:/op-node
    - jwt_shared:/jwt
  op-geth-init:
    image: golemnetwork/golembase-l3-op-geth:v1.101511.0-0.2-hoodi-test-asy3-a1a695b9
    depends_on:
      op-init:
        condition: service_completed_successfully
    entrypoint: []
    command:
    - /bin/sh
    - -c
    - |
      set -euo pipefail

      if [ ! -f '/geth/geth' ]; then
        echo 'Initializing geth data directory with genesis block...'

        # Use genesis file from op-init
        if ! geth init --state.scheme=hash --datadir='/geth' '/genesis.json'; then
          echo 'ERROR: Failed to initialize geth with genesis block'
          exit 1
        fi
        echo 'Geth initialized successfully with genesis block'
      else
        echo 'Geth data directory already initialized, skipping initialization'
      fi
    volumes:
    - op_geth_data:/geth
  op-geth:
    image: golemnetwork/golembase-l3-op-geth:v1.101511.0-0.2-hoodi-test-asy3-a1a695b9
    restart: unless-stopped
    stop_grace_period: 5m
    depends_on:
      op-geth-init:
        condition: service_completed_successfully
    command:
    - --networkid=20066
    - --datadir=/geth
    - --http
    - --http.corsdomain=*
    - --http.vhosts=*
    - --http.addr=0.0.0.0
    - --http.port=8545
    - --http.api=admin,debug,eth,txpool,net,engine,web3,golembase,txpool
    - --ws
    - --ws.addr=0.0.0.0
    - --ws.port=8546
    - --ws.origins=*
    - --ws.api=admin,debug,eth,txpool,net,engine,web3,golembase,txpool
    - --syncmode=snap
    - --authrpc.vhosts=*
    - --authrpc.addr=0.0.0.0
    - --authrpc.port=8551
    - --authrpc.jwtsecret=/jwt/jwt
    - --usb=false
    - --state.scheme=hash
    - --nat=none
    - --bootnodes=enode://a71424082ee179c5553ebe59a99cb91d3a9be01a3d4e923f3a51aae80baa40671ca835d0d309504563e5accc6416d6dc5b54b4b5f22d9b5b4260674f7ea1e5bd@91.99.184.248:30012,enode://6d983f12d38be5cc4d08f73d9164457b3a00ede49e10b760a823eea8ba06930b4817f044d8a5975f5e6384a65f06013fe381e2fd5849f6796c4b9367830b7b95@195.201.165.105:30014,enode://26ffd98858fadaeb67667bed39805cdb4890abe65f1d0cce7a2b52d56374e832452d5fea54daa3a3fb434e2e9293d589822ae9abd217b5697b2dff7ca9776c05@49.13.30.29:30016,enode://6496c602b0cc5310b69decf5778714f07f49248cb2726042c0609a4b064801e8e7c27cd08da41ba7fc97bf5e24d25e269fb5b08f53f7b904fa127fbb64d53f2f@91.99.94.10:30018,enode://252bc84155e65e386aef9270d0e79f4468bafb9b3924fec3a5298fc32343f36ec61e56d460296c94508b584d0e7174eb6a511c622656a7a09846f628dcadd16f@91.99.157.203:30020
    - --txpool.disable.non.golembase.transactions=true
    ports:
    - 8545:8545
    - 8546:8546
    volumes:
    - op_geth_data:/geth
    - jwt_shared:/jwt
  op-node:
    image: golemnetwork/golembase-l3-op-node:v1.13.4-hoodi-test-asy3-093c51ac
    restart: unless-stopped
    stop_grace_period: 5m
    depends_on:
      op-init:
        condition: service_completed_successfully
      op-geth:
        condition: service_started
    command:
    - op-node
    - --altda.enabled=true
    - --altda.da-server=http://altai:3100
    - --altda.da-service=true
    - --l1=https://l2.holesky.golem-base.io/rpc
    - --l1.beacon.ignore=true
    - --l1.rpckind=standard
    - --l1.trustrpc
    - --l2=http://op-geth:8551
    - --l2.enginekind=geth
    - --l2.jwt-secret=/jwt/jwt
    - --rpc.addr=0.0.0.0
    - --rpc.port=9545
    - --p2p.nat=true
    - --p2p.ban.peers=false
    - --p2p.bootnodes=enr:-J64QBcvKG8EBvjVvVYxu0dwSrow_x_rYXd_sfGW3kjcbbkIJTcX-yCUl0zvAFiRg8cWx5zwQc7fJYKvwrWWgLJMEF-GAZoWfVNRgmlkgnY0gmlwhFtjuPiHb3BzdGFja4TinAEAiXNlY3AyNTZrMaECg7pDJLEbc0HRgltXSNeaiOcIrLKgRrzkZ9TVGVRukBWDdGNwgnU9g3VkcIJ1PQ,enr:-J64QE091iB2ylThLSPoy1Nv6pclufdDJpMsLFwEqnVd0VxaBZU255CS55bWw9pfY0huVVlkxlotkFKwH7KQn25axXSGAZoWfUz7gmlkgnY0gmlwhMPJpWmHb3BzdGFja4TinAEAiXNlY3AyNTZrMaED-ZNPGCyTeFkLw65kfBZ8ODHriLQTMOH6xTOjXGfRuoaDdGNwgnU_g3VkcIJ1Pw,enr:-J64QDlA8O3jcU_lPpOxpti6AaCSdNXFbsmx0rd7FYdG8cGKN3peEef0iAGnOpZu1jMQYI0X10yGGpvQ2GUD5pjVwk2GAZoWfU8cgmlkgnY0gmlwhDENHh2Hb3BzdGFja4TinAEAiXNlY3AyNTZrMaECqcpmVRXN9vuZp6I9r3sETmVFf6UTggt5qKIi-uQspBGDdGNwgnVBg3VkcIJ1QQ,enr:-J64QC88kqWnQbsLDtogckS6crdbwALfZF5YINAkQ3RU1u1bRwaPIKxeyDgnMRZC88zclKjGrO8gVsG3kdahWTlKbi2GAZoWfU8KgmlkgnY0gmlwhFtjXgqHb3BzdGFja4TinAEAiXNlY3AyNTZrMaECiPmx5rOnO9mPew0huI0B_tLiP1-yUogGd7TSt9kgLMODdGNwgnVDg3VkcIJ1Qw,enr:-J64QD0DWGp35RoXVM6lq4FP0KgzfnWoOjA0jB274wVnu77JCHl9iqG285kheKKqQ1k70YMOYjadciXmevwk9NW9fviGAZoWfVOHgmlkgnY0gmlwhFtjncuHb3BzdGFja4TinAEAiXNlY3AyNTZrMaECUABTd-GsWOGNfUa6T5_b4hKF0vJzFs8h7el_kiooxXmDdGNwgnVFg3VkcIJ1RQ
    - --p2p.listen.tcp=9222
    - --p2p.listen.udp=9222
    - --metrics.enabled
    - --metrics.addr=0.0.0.0
    - --metrics.port=7300
    - --syncmode=execution-layer
    - --rollup.config=/rollup.json
    - --log.level=info
    ports:
    - 9545:9545
    volumes:
    - jwt_shared:/jwt
    - op_node_data:/op-node
  altai:
    image: golemnetwork/altai:latest
    restart: unless-stopped
    depends_on:
      kubo:
        condition: service_started
    ports:
    - 3100:3100
    command:
    - --addr=0.0.0.0
    - --port=3100
    - --s3.bucket=(@= data.values.altda.bucket @)
    - --s3.endpoint=(@= data.values.altda.endpoint @)
    - --network=(@= data.values.altda.network @)
    - --log.level=info
