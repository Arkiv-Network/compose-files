volumes:
  op_geth_data: {}
  op_node_data: {}
  jwt_shared: {}
services:
  op-init:
    image: alpine:latest
    command:
    - sh
    - -c
    - |
      set -e

      # Create config directory
      mkdir -p /config

      # Generate JWT secret if it doesn't exist
      if [ ! -f '/jwt/jwt' ]; then
        echo 'Generating JWT secret'
        mkdir -p /jwt
        # Generate a 32-byte random hex string for JWT secret
        apk add --no-cache openssl
        openssl rand -hex 32 > /jwt/jwt
        chmod 666 /jwt/jwt
        echo 'JWT secret generated successfully'
      else
        echo 'JWT secret already exists, skipping generation'
      fi
    volumes:
    - op_node_data:/op-node
    - jwt_shared:/jwt
  op-geth-init:
    image: golemnetwork/golembase-l3-op-geth:v1.101511.0-0.2-hoodi-test-l9-366c97a9
    depends_on:
      op-init:
        condition: service_completed_successfully
    entrypoint: []
    command:
    - /bin/sh
    - -c
    - |
      set -e
      if [ ! -f '/geth/geth' ]; then
        echo 'Initializing geth data directory with genesis block...'

        # Use genesis file from op-init
        if ! geth init --state.scheme=hash --datadir='/geth' '/genesis.json'; then
          echo 'ERROR: Failed to initialize geth with genesis block'
          exit 1
        fi
        echo 'Geth initialized successfully with genesis block'
      else
        echo 'Geth data directory already initialized, skipping initialization'
      fi
    volumes:
    - op_geth_data:/geth
  op-geth:
    image: golemnetwork/golembase-l3-op-geth:v1.101511.0-0.2-hoodi-test-l9-366c97a9
    restart: unless-stopped
    stop_grace_period: 5m
    depends_on:
      op-geth-init:
        condition: service_completed_successfully
    command:
    - --networkid=20051
    - --datadir=/geth
    - --http
    - --http.corsdomain=*
    - --http.vhosts=*
    - --http.addr=0.0.0.0
    - --http.port=8545
    - --http.api=admin,debug,eth,txpool,net,engine,web3,golembase,txpool
    - --ws
    - --ws.addr=0.0.0.0
    - --ws.port=8546
    - --ws.origins=*
    - --ws.api=admin,debug,eth,txpool,net,engine,web3,golembase,txpool
    - --syncmode=snap
    - --authrpc.vhosts=*
    - --authrpc.addr=0.0.0.0
    - --authrpc.port=8551
    - --authrpc.jwtsecret=/jwt/jwt
    - --usb=false
    - --state.scheme=hash
    - --nat=none
    - --bootnodes=enode://0240d7fe8ebe907927686ee7e7f2a2b899f5ca3eed291641483c6afc0c2e85383e2d411c05714437f6093bce96b1d1182d31d74b943cb18ed209496f1318dbe3@195.201.165.105:30012,enode://0789caab5d7bbecb540002a2c3bb65664e2a01a54ce52a08d428de53cf87ce0632c48f09c05bd71c2a397a963fdf22368ddc0f3bdee9981df7751e97a04618c0@195.201.165.105:30014,enode://d60f127645d842f6ba861cb3c98a3de715b3b527c5d1e13bb7213912e53aaa769958a5452a85f33b0a5a9b6f5a83bb0e3efd76652c3da753be8f7b4096728ac4@195.201.165.105:30016,enode://69ff4cda79959c65157e3980673468e107efa452a06fef845d77072ce32488847b5a7024ed2f2e9d892a2c791e6f1d728f34a408a0fe0ae39ab07fd32719006d@195.201.165.105:30018,enode://704b19ed831f091b52ea4a546b0a9bfe9a997e942bc6862f4138b9955530c72a4d0879a78abe296a9555dd926028a6793071ef613a756c999aa32057e73ac1d0@195.201.165.105:30020
    - --txpool.disable.non.golembase.transactions=true
    ports:
    - 8545:8545
    - 8546:8546
    volumes:
    - op_geth_data:/geth
    - jwt_shared:/jwt
  op-node:
    image: golemnetwork/golembase-l3-op-node:v1.13.4-hoodi-test-l9-ed186e87
    restart: unless-stopped
    stop_grace_period: 5m
    depends_on:
      op-init:
        condition: service_completed_successfully
      op-geth:
        condition: service_started
    command:
    - op-node
    - --l1=https://l2.holesky.golem-base.io/rpc
    - --l1.beacon.ignore=true
    - --l1.rpckind=standard
    - --l1.trustrpc
    - --l2=http://op-geth:8551
    - --l2.enginekind=geth
    - --l2.jwt-secret=/jwt/jwt
    - --rpc.addr=0.0.0.0
    - --rpc.port=9545
    - --p2p.nat=true
    - --p2p.ban.peers=false
    - --p2p.bootnodes=enr:-J64QLAHO1JFGy1VXFfME_o3l-qlILOgr_W4DakjfP7t3Os3FnKWelSSdxDwnM6jhLlvX7IKvDSO7Trf4bSeL7UxZiOGAZnoMiyBgmlkgnY0gmlwhMPJpWmHb3BzdGFja4TTnAEAiXNlY3AyNTZrMaED3FpfSJtrAsxYLwshA6n2YbhYviLaau9j-it1RIs3uMODdGNwgnU9g3VkcIJ1PQ,enr:-J64QE4OzSLFsLSpJndXPz3zP6sgtVmk041R1Lp0jhf-OLALGBM74NfPXnL2a2Oko8VqBWf7kNoxxssOW_0PyShiS3CGAZnoMiuRgmlkgnY0gmlwhMPJpWmHb3BzdGFja4TTnAEAiXNlY3AyNTZrMaED0BcWTU-EatLg5ztxYM_FUBgjSe4vXsX6FAciFLw5IimDdGNwgnU_g3VkcIJ1Pw,enr:-J64QLKrc2R20Bk-YNOnzyN5LYV8IIjgcsoFYVkLuJBSBiGdY9z4L25NzbyftTVCFLmxGArrmj6uO9EkgL784oiQShWGAZnoMiuSgmlkgnY0gmlwhMPJpWmHb3BzdGFja4TTnAEAiXNlY3AyNTZrMaEDFWW17pZjEnym1rtz3cXvOlY1Pa8rHzBf72oX4oGwwEiDdGNwgnVBg3VkcIJ1QQ,enr:-J64QAt4nPruhcwRF4LgJfoBrYMI3ZOdeW5djZ_Xn2FFSO4jACZKMxloCs1H-tN9RyintoLRXIXBgEBM2HPK_IqJ2IGGAZnoMixNgmlkgnY0gmlwhMPJpWmHb3BzdGFja4TTnAEAiXNlY3AyNTZrMaECzpVzLqr3XfCHR9ydtnZpyfRMEFZL92hcDM1B-7rG6u6DdGNwgnVDg3VkcIJ1Qw,enr:-J64QPQMnL13AiTFsxSxPbqGr3ChDrK7xqsmkgiBY2kFBthKfNpvWIjK12VUp-W_vD7ynvUcaMmaU-FTop9JxMeIeq6GAZnoMiuEgmlkgnY0gmlwhMPJpWmHb3BzdGFja4TTnAEAiXNlY3AyNTZrMaEDNudHpJ29DWoLfaPxVJ1tHwLI4KcQMl8BA0FlX0URUxWDdGNwgnVFg3VkcIJ1RQ
    - --p2p.listen.tcp=9222
    - --p2p.listen.udp=9222
    - --metrics.enabled
    - --metrics.addr=0.0.0.0
    - --metrics.port=7300
    - --syncmode=execution-layer
    - --rollup.config=/rollup.json
    - --log.level=info
    ports:
    - 9545:9545
    volumes:
    - jwt_shared:/jwt
    - op_node_data:/op-node
