volumes:
  op_geth_data: {}
  op_node_data: {}
  jwt_shared: {}
services:
  op-init:
    image: alpine:latest
    command:
    - sh
    - -c
    - |
      set -e

      # Create config directory
      mkdir -p /config

      # Generate JWT secret if it doesn't exist
      if [ ! -f '/jwt/jwt' ]; then
        echo 'Generating JWT secret'
        mkdir -p /jwt
        # Generate a 32-byte random hex string for JWT secret
        apk add --no-cache openssl
        openssl rand -hex 32 > /jwt/jwt
        chmod 666 /jwt/jwt
        echo 'JWT secret generated successfully'
      else
        echo 'JWT secret already exists, skipping generation'
      fi
    volumes:
    - op_node_data:/op-node
    - jwt_shared:/jwt
  op-geth-init:
    image: golemnetwork/golembase-l3-op-geth:v1.101511.0-0.2-hoodi-test-lor4-27450abb
    depends_on:
      op-init:
        condition: service_completed_successfully
    entrypoint: []
    command:
    - /bin/sh
    - -c
    - |
      set -e
      if [ ! -f '/geth/geth' ]; then
        echo 'Initializing geth data directory with genesis block...'

        # Use genesis file from op-init
        if ! geth init --state.scheme=hash --datadir='/geth' '/genesis.json'; then
          echo 'ERROR: Failed to initialize geth with genesis block'
          exit 1
        fi
        echo 'Geth initialized successfully with genesis block'
      else
        echo 'Geth data directory already initialized, skipping initialization'
      fi
    volumes:
    - op_geth_data:/geth
  op-geth:
    image: golemnetwork/golembase-l3-op-geth:v1.101511.0-0.2-hoodi-test-lor4-27450abb
    restart: unless-stopped
    stop_grace_period: 5m
    depends_on:
      op-geth-init:
        condition: service_completed_successfully
    command:
    - --networkid=20022
    - --datadir=/geth
    - --http
    - --http.corsdomain=*
    - --http.vhosts=*
    - --http.addr=0.0.0.0
    - --http.port=8545
    - --http.api=admin,debug,eth,txpool,net,engine,web3,golembase,txpool
    - --ws
    - --ws.addr=0.0.0.0
    - --ws.port=8546
    - --ws.origins=*
    - --ws.api=admin,debug,eth,txpool,net,engine,web3,golembase,txpool
    - --syncmode=snap
    - --authrpc.vhosts=*
    - --authrpc.addr=0.0.0.0
    - --authrpc.port=8551
    - --authrpc.jwtsecret=/jwt/jwt
    - --usb=false
    - --state.scheme=hash
    - --nat=none
    - --bootnodes=enode://947a77a050f7df4efc559776f55a2b9b27c19b16a3d01c6699732a17ca5f828529a5e512e2a167a451a0de5a23f2745b7547e7ff7248833d4f09cc0bd95f07aa@195.201.165.105:30012,enode://49ddd3377eabd90c3b72e3bdb6c08ae4103330190818bcee6a0283437f75b214cf35e841abb435d65fef09e0b35e4a4c00f3fd8cf1d7ad60a1f4f11c54357c78@195.201.165.105:30014,enode://301fb8e719b137f5982f6e9d548758affaa7e7060e25e68ca8a377edc9294f1235567b3c44a32274f974d4939724b600fba12e1586687f3fa5fa3f0ed81128e4@195.201.165.105:30016,enode://5e5552edccaee0973e28c3a2b6b3f19bc54a97e5b383ee2b35bfc59c9d0d7567fd98e919bcd89850f9fba95735fe5a516885a97bf75f5de61d2de4812f0d2851@195.201.165.105:30018,enode://20dfccce391fff1b1e248456712847e741fe7b12c303c1ab271f89d0ae4ee05b5747362427123daf6c34f118dcf44a012b74a7d41726123c086d89ea814653ed@195.201.165.105:30020
    - --txpool.disable.non.golembase.transactions=true
    ports:
    - 8545:8545
    - 8546:8546
    volumes:
    - op_geth_data:/geth
    - jwt_shared:/jwt
  op-node:
    image: golemnetwork/golembase-l3-op-node:v1.13.4-hoodi-test-lor4-7cd7235d
    restart: unless-stopped
    stop_grace_period: 5m
    depends_on:
      op-init:
        condition: service_completed_successfully
      op-geth:
        condition: service_started
    command:
    - op-node
    - --l1=https://l2.holesky.golem-base.io/rpc
    - --l1.beacon.ignore=true
    - --l1.rpckind=standard
    - --l1.trustrpc
    - --l2=http://op-geth:8551
    - --l2.enginekind=geth
    - --l2.jwt-secret=/jwt/jwt
    - --rpc.addr=0.0.0.0
    - --rpc.port=9545
    - --p2p.nat=true
    - --p2p.ban.peers=false
    - --p2p.bootnodes=enr:-J64QAbajz-HTbUmspcJoxpA_bBwbHTLfkCL7sSYCEbaLRBrIPqSwCpQAF3COqRIJGcIg3Vhxkcfw0WcEGoquIkHssCGAZm-VHRKgmlkgnY0gmlwhMPJpWmHb3BzdGFja4S2nAEAiXNlY3AyNTZrMaEDK_RucquvM1_YlFj4_t0Ocw6dQPtjYjomTITbpVen9SyDdGNwgnU9g3VkcIJ1PQ,enr:-J64QP7LcYuROw7ccbCMxQmjVo8YhPnl_KL-mmsS5JlpmctvUS_e9RTs9CApc4WxtSdnnA8Zmb0pZPr_UGkoRspuDH-GAZm-VHQzgmlkgnY0gmlwhMPJpWmHb3BzdGFja4S2nAEAiXNlY3AyNTZrMaED1zupJUfUJhVkG2pTCKbZRAKm70mvjhluUZ763Gi82F-DdGNwgnU_g3VkcIJ1Pw,enr:-J64QO6CC49z5bJgspz-k2IXJZyUK80wFJRn1e1zZjtJoJM3DJ6SW7aZTJPtVi_37R5PJie_mDRMqlyedzkf8M-hhW6GAZm-VHRQgmlkgnY0gmlwhMPJpWmHb3BzdGFja4S2nAEAiXNlY3AyNTZrMaEDU-ofuysk0Oc3M11hF7ncnpODuYMiCdxlP4R8l2cQO_qDdGNwgnVBg3VkcIJ1QQ,enr:-J64QDSUwpqEuXIK-iNp0VUhDFT5HO0MEctx2ml1CQTMODu5IC1Bd736CcJyf5gbw-TIzU4-uQ0nTLuiboox8zHKFzeGAZm-VHjAgmlkgnY0gmlwhMPJpWmHb3BzdGFja4S2nAEAiXNlY3AyNTZrMaECibK4c7EOLAR39N7wrGR9n5A0FRrs2xEROl7hyxKVuQ-DdGNwgnVDg3VkcIJ1Qw,enr:-J64QH68aK5dMu1iRbOS2ooP3Wo2PCjye_182ohx1nrJsj3FU9y2brs8Z_VraQb8jYL786epBCFRk_arJpITjxYnSkaGAZm-VHQygmlkgnY0gmlwhMPJpWmHb3BzdGFja4S2nAEAiXNlY3AyNTZrMaEDmOqmgE2bupUC_wn9Is_UB9YmXoKjdzNhRhxYq4UtD7ODdGNwgnVFg3VkcIJ1RQ
    - --p2p.listen.tcp=9222
    - --p2p.listen.udp=9222
    - --metrics.enabled
    - --metrics.addr=0.0.0.0
    - --metrics.port=7300
    - --syncmode=execution-layer
    - --rollup.config=/rollup.json
    - --log.level=info
    ports:
    - 9545:9545
    volumes:
    - jwt_shared:/jwt
    - op_node_data:/op-node
